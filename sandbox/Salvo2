#!/usr/bin/env perl
# Salvo2
use strict;
use warnings;
use feature 'say';
use autodie;
use FindBin;
use lib "$FindBin::Bin/lib";
use Salvo;
use Getopt::Long;

my $usage = <<"EOM"; 

Synopsis:

    Salvo - Slurm command and job launcher v 1.2.1


Description:

    Designed to aid launching of jobs on Slurm jobs from a command txt file.
    View github page <https://github.com/srynobio/Salvo> for more detailed description.

    Version 1.2.1 now allows CHPC users to submit jobs to in two different modes to:
        kingspeak-guest
        ash-guest
        ember-guest.
        lonepeak-guest (does not have access to UCGD lustre space).

    \%salvo_opts,             "command_file|cf=s",
    "account|a=s",            "partition|p=s",
    "cluster|c=s",            "mode|m=s",
    "user|u=s",               "jobs_per_sbatch|jps=i",
    "hyperthread",            "clean",
    "exclude_cluster|ec=s",   "runtime|r=s",
    "nodes_per_sbatch|nps=i", "queue_limit|ql=i",
    "additional_steps|as=s",  "exclude_nodes|en=s",
    "jobname|j=s", "concurrent",
    "squeue_me|sm", "sinfo_idle|si",
    "node_info|ni",
    "help|h",
)



EOM


my %salvo_opts;
GetOptions(
    \%salvo_opts,             "command_file|cf=s",
    "account|a=s",            "partition|p=s",
    "cluster|c=s",            "mode|m=s",
    "user|u=s",               "jobs_per_sbatch|jps=i",
    "hyperthread",            "clean",
    "exclude_cluster|ec=s",   "runtime|r=s",
    "nodes_per_sbatch|nps=i", "queue_limit|ql=i",
    "additional_steps|as=s",  "exclude_nodes|en=s",
    "jobname|j=s", "concurrent",
    "squeue_me|sm", "sinfo_idle|si",
    "node_info|ni",
    "help|h",
);

if ( $salvo_opts{help} ) {
    say $usage;
    exit(0);
}

## Reporting options.
if ( $salvo_opts{sinfo_idle} ) {
    my $salvo = Salvo->new( \%salvo_opts );
    $salvo->sinfo_idle;
    exit(0);
}
if ( $salvo_opts{squeue_me} ) {
    my $salvo = Salvo->new( \%salvo_opts );
    $salvo->squeue_me;
    exit(0);
}
if ( $salvo_opts{node_info} ) {
    my $salvo = Salvo->new( \%salvo_opts );
    $salvo->report_node_info;
    exit(0);
}

## Clean up option.
if ( $salvo_opts{clean} ) {
    my @salvo_files = glob q(*processing *launched *out *complete *cmds);
    unlink @salvo_files;
    say "Cleaned up!";
    exit(0);
}

## Check required.
unless ( $salvo_opts{mode} and $salvo_opts{command_file} ) {
    say $usage;
    say "Required options not met.";
    exit(1);
}

my $salvo = Salvo->new( \%salvo_opts );
$salvo->fire;

